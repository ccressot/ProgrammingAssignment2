makeVector<-function(x=numeric()){
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmean<-function(mean)  m<<-mean
getmean<-function() m
list(set=set, get=get,
setmean=setmean,
getmean=getmean)
}
x<-c(4,3,2,1)
makeVector(x)
ll<-makeVector(x)
ll
ll$setmean
ll$getmean
getmean
$getmean
makeVector.getmean
makeVector$getmean
ll$getmean
m
cachemean<-function(x,...){
m<-x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data<-x$get()
m<-mean(data,...)
x$setmean(m)
m
}
cachemean(x)
cachemean(x,...)
cachemean(x)
makeVector
makeVector(x)
cachemean(x)
cachemean(ll)
mean(x)
cachemean(ll)
install.packages("shiny")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
runExample("01_hello")
runApp("tutorial/lesson1")
source("/Users/Cindy/RWorkSpace/grille.R")
source("/Users/Cindy/RWorkSpace/bilan.R")
library("ncdf", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source("/Users/Cindy/RWorkSpace/bilan.R")
library("ncdf4", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("RNetCDF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source("/Users/Cindy/RWorkSpace/bilan.R")
deb<-"2000-01-01"
install.packages("RNetCDF")
library("RNetCDF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source("/Users/Cindy/RWorkSpace/bilan.R")
fic<-open.ncdf("analysis.nc")
cdd<-c(1,9,17,25)
install.packages("ncdf")
library("ncdf", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source("/Users/Cindy/RWorkSpace/bilan.R")
grille()
recup_aires<-function(){
fin<-"2012-01-01"
# grille lat-lon
quit
quit
exit
0
install.packages("spark")
install.packages("h2o")
getwd()
setwd("/Users/Cindy/RWorkSpace")
getwd()
makeVector(x)
y->makeVector(x)
x->makeVector(x)
makeVector(x)
x
cachemean(x)
cachemean(x,...)
cachemean(x)
x
x$getmean
x->makeVector(x)
m
ll
getmean(x)
ll$set
ll$setmean
m
m->ll$setmean
m->ll$getmean
x<-list(a=1:4,b=2)
x
lapply(x,mean)
sappl(x,mean)
sapply(x,mean)
x->matrix(rnorm(200),20,10)
x<-matrix(rnorm(200),20,10)
x
apply(x,2,mean)
x<-matrix(1,3,3)
x
apply(x,1,mean)
apply(x,2,mean)
apply(x,3,mean)
apply(x,3,sum)
apply(x,1,sum)
apply(x,2,sum)
apply(x,1,mean)
apply(x,2,mean)
apply(x,1,quantile,probs=0.95)
x<-matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=0.95)
apply(x,1,quantile,probs=c(0.05,0.95))
library(datasets)
data(iris)
?iris
iris
iris[Species=virginica]
iris['Species'=virginica]
iris['Species'==virginica]
iris['Species'=='virginica']
iris$Sepal.Length
iris$Sepal.Length[iris.Species=='virginica']
iris$Sepal.Length[iris$Species=='virginica']
vec<-iris$Sepal.Length[iris$Species=='virginica']
mean(vec)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
rowMeans(iris[,1:4])
library(datasets)
data(mtcars)
mtcars
apply(mtcars,mean)
apply(mtcars,2,mean)
mean(mtcars$mpg,mtcars$cyl)
with(mtcars,tapply(mpg,cyl,mean))
taaply(mpg,cyl,mean)
taply(mpg,cyl,mean)
taply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars,tapply(horsepower,cyl,mean))
with(mtcars,tapply(hp,cyl,mean))
209.21429-82.63636
debug(ls)
ls
ls
ls()
makeVector
makeVector(x)
x<-1:4
makeVector(x)
l<-makeVector(x)
l
l$get
l$getmean
m
l
x
l$set
l$set(x)
l$set(x)
l$get
l$get(x)
l$get()
x
l$get()
l$setmean
l$setmean(x)
l$getmean()
m
mean
l$getmean()
makeVector
makeVector()
makeVector(x)
list_vector<-makeVector
list_vector<-makeVector(
)
list_vector<-makeVector()
cachemean(x)
cachemean(l)
cachemean(l)
m
l$getmean()
alpha<-l$getmean()
alpha
x$getmean()
l<-makeVector(x)
l$getmean()
l$setmean()
l$setmean(x)
l$getmean()
cachemean(x)
l<-makeVector(x)
l
l$getmean()
l$setmean()
cachemean(l)
cachemean(l)
y<-1:10
y
listy<-makeVector(y)
listy
cachemean(listy)
cachemean(listy)
x<-matrix(1,3,3)
x
matrix()
source('makeMatrix')
source('makeMatrix.R')
y<-matrix(1,3,3)
y
list<-makeMatrix(y)
list
source('makeMatrix.R')
list<-makeMatrix(y)
cachemean(list)
source('makeMatrix.R')
list<-makeMatrix(y)
list
list$get()
solve(y)
y<-matrix(c(1,5,9,2,6,10,3,7,11),3,3)
y
list<-makeMatrix(y)
list
list$get
list$get()
solve(y)
y<-matrix(c(1,0,0,0,1,0,0,0,1),3,3)
y
solve(y)
list<-makeMatrix(y)
cacheinv(list)
cacheinv(list)
source('makeMatrix.R')
list<-makeCacheMatrix(y)
list
makeCacheMatrix<-function(x=matrix()){ # creates a special "matrix" object that can cache its inverse
inv<-NULL
set<-function(y){
x<<-y
inv<<-NULL
}
get<-function() x
setinv<-function(solve)  inv<<-solve
getinv<-function() inv
list(set=set, get=get,
setinv=setinv,
getinv=getinv)
}
makeCacheMatrix(y)
makeCacheMatrix<-function(x=matrix()){ # creates a special "matrix" object that can cache its inverse
inv<-NULL
set<-function(y){
x<<-y
inv<<-NULL
}
get<-function() x
setinv<-function(solve)  inv<<-solve
getinv<-function() inv
list(set=set, get=get,
setinv=setinv,
getinv=getinv)
}
makeCacheMatrix<-function(x=matrix()){ # creates a special "matrix" object that can cache its inverse
inv<-NULL
set<-function(y){
x<<-y
inv<<-NULL
}
get<-function() x
setinv<-function(solve)  inv<<-solve
getinv<-function() inv
matrix(c(set=set, get=get,
setinv=setinv,
getinv=getinv)),2,2)
}
makeCacheMatrix<-function(x=matrix()){ # creates a special "matrix" object that can cache its inverse
inv<-NULL
set<-function(y){
x<<-y
inv<<-NULL
}
get<-function() x
setinv<-function(solve)  inv<<-solve
getinv<-function() inv
matrix(c(set=set, get=get,
setinv=setinv,
getinv=getinv),2,2)
}
makeCacheMatrix(y)
l<-makeCacheMatrix(y)
l
l<-as.data.frame(l)
l
quit
setwd("/Users/Cindy/GitHub/ProgrammingAssignment2")
getwd()
ls()
listfiles()
